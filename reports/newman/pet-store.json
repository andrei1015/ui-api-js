{
  "collection": {
    "_": {
      "postman_id": "7bd162f6-d90d-4472-993c-67545a6b1c43",
      "exporter_id": "563590"
    },
    "item": [
      {
        "id": "28c2cd20-0922-4502-be43-02de6bb8beeb",
        "name": "Create Pet",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{categoryId}},\r\n    \"name\": \"{{categoryName}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{random_image}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{$randomInt}},\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2be2f1f0-fdff-416e-85fd-f2931ab2803d",
              "type": "text/javascript",
              "exec": [
                "const petId = pm.variables.replaceIn('{{$randomInt}}');\r",
                "const petName = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                "const categoryId = pm.variables.replaceIn('{{$randomInt}}');\r",
                "const categoryName = pm.variables.replaceIn('{{$randomLoremWord}}');\r",
                "const image = pm.variables.replaceIn('{{$randomAnimalsImage}}');\r",
                "\r",
                "pm.collectionVariables.set(\"petId\", petId);\r",
                "pm.collectionVariables.set(\"petName\", petName);\r",
                "pm.collectionVariables.set(\"categoryId\", categoryId);\r",
                "pm.collectionVariables.set(\"categoryName\", categoryName);\r",
                "pm.collectionVariables.set(\"random_image\", image);"
              ],
              "_lastExecutionId": "d137a806-bb46-413e-9855-0dd229a017d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6938d038-a40f-4a6f-972c-5b03d3818cdd",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "  pm.response.to.have.status(200);\r",
                "});"
              ],
              "_lastExecutionId": "42db639c-3177-48a3-9870-2c37c3bb7cbf"
            }
          }
        ]
      },
      {
        "id": "7f1728e3-8a30-4b5d-bf27-3bb7ad09f774",
        "name": "Retrieve pet by ID",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet",
              "{{petId}}"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "298bded3-a144-4cf9-be93-a18652f669cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad65d876-5993-4f5a-8946-9414325de5fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2248bff3-86c3-49ee-9433-68f62d552958",
              "type": "text/javascript",
              "exec": [
                "var data = pm.response.json();\r",
                "\r",
                "pm.test(\"the id is correct\", function () {\r",
                "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"petId\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the name is correct\", function () {\r",
                "pm.expect(data.name.toString()).to.be.eql(pm.variables.get(\"petName\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the category id is correct\", function () {\r",
                "pm.expect(data.category.id.toString()).to.be.eql(pm.variables.get(\"categoryId\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the category name is correct\", function () {\r",
                "pm.expect(data.category.name.toString()).to.be.eql(pm.variables.get(\"categoryName\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the image is correct\", function () {\r",
                "pm.expect(data.photoUrls).to.include(pm.variables.get(\"random_image\"));\r",
                "});"
              ],
              "_lastExecutionId": "2e9c0bb5-51ca-434a-953b-b0d7efe66955"
            }
          }
        ]
      },
      {
        "id": "c5a7099b-60b8-4a79-ade1-960d56b4ea85",
        "name": "Create User",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": {{userId}},\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07ff3a86-375f-4595-a18a-c29fa7e46264",
              "type": "text/javascript",
              "exec": [
                "const userId = pm.variables.replaceIn('{{$randomInt}}');\r",
                "const username = pm.variables.replaceIn('{{$randomUserName}}');\r",
                "const firstName = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                "const lastName = pm.variables.replaceIn('{{$randomLastName}}');\r",
                "const email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                "const password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                "const phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                "\r",
                "pm.collectionVariables.set(\"userId\", userId);\r",
                "pm.collectionVariables.set(\"username\", username);\r",
                "pm.collectionVariables.set(\"firstName\", firstName);\r",
                "pm.collectionVariables.set(\"lastName\", lastName);\r",
                "pm.collectionVariables.set(\"email\", email);\r",
                "pm.collectionVariables.set(\"password\", password);\r",
                "pm.collectionVariables.set(\"phone\", phone);\r",
                ""
              ],
              "_lastExecutionId": "fc302b99-d9c8-49af-a4d3-47b394eaff8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e553ddf-9796-4234-81e3-48283fd60dd9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "  pm.response.to.have.status(200);\r",
                "});"
              ],
              "_lastExecutionId": "27910cb1-d29d-492b-8db4-67e5141ee0d3"
            }
          }
        ]
      },
      {
        "id": "2330afad-29ca-4fda-a4de-36b2afc0669e",
        "name": "Retrieve User by username",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "user",
              "{{username}}"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "74e116b4-c0a8-403a-8f43-73de14892060",
              "type": "text/javascript",
              "exec": [
                "var data = pm.response.json();\r",
                "\r",
                "pm.test(\"the id is correct\", function () {\r",
                "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"userId\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the name is correct\", function () {\r",
                "pm.expect(data.username.toString()).to.be.eql(pm.variables.get(\"username\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the first name is correct\", function () {\r",
                "pm.expect(data.firstName.toString()).to.be.eql(pm.variables.get(\"firstName\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the last name is correct\", function () {\r",
                "pm.expect(data.lastName.toString()).to.be.eql(pm.variables.get(\"lastName\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the email name is correct\", function () {\r",
                "pm.expect(data.email.toString()).to.be.eql(pm.variables.get(\"email\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the password is correct\", function () {\r",
                "pm.expect(data.password.toString()).to.be.eql(pm.variables.get(\"password\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the phone is correct\", function () {\r",
                "pm.expect(data.phone.toString()).to.be.eql(pm.variables.get(\"phone\"));\r",
                "});"
              ],
              "_lastExecutionId": "02472d5a-e913-457c-822f-858bb78382fe"
            }
          }
        ]
      },
      {
        "id": "4dad1dcd-21fc-4a21-82d5-541a6b1b2615",
        "name": "Create Order",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": {{orderId}},\r\n  \"petId\": {{petId}},\r\n  \"quantity\": {{quantity}},\r\n  \"shipDate\": \"{{shippingDate}}\",\r\n  \"status\": \"pending\",\r\n  \"complete\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dcb26d07-1e56-4ca4-90d8-834ac6f2ddbe",
              "type": "text/javascript",
              "exec": [
                "const orderId = pm.variables.replaceIn('{{$randomInt}}');\r",
                "const quantity = pm.variables.replaceIn('{{$randomInt}}');\r",
                "const shippingDate = new Date(pm.variables.replaceIn('{{$randomDateFuture}}'));\r",
                "\r",
                "pm.collectionVariables.set(\"orderId\", orderId);\r",
                "pm.collectionVariables.set(\"quantity\", quantity);\r",
                "pm.collectionVariables.set(\"shippingDate\", shippingDate.toISOString());"
              ],
              "_lastExecutionId": "675b16f0-71e6-40ed-803c-9f750b838fba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ccda0e2-b1e9-43ab-b167-df217ea4a30a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "  pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "var data = pm.response.json();\r",
                "\r",
                "pm.test(\"the id is correct\", function () {\r",
                "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"orderId\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the petId is correct\", function () {\r",
                "pm.expect(data.petId.toString()).to.be.eql(pm.variables.get(\"petId\"));\r",
                "});\r",
                "\r",
                "pm.test(\"the quantity is correct\", function () {\r",
                "pm.expect(data.quantity.toString()).to.be.eql(pm.variables.get(\"quantity\"));\r",
                "});"
              ],
              "_lastExecutionId": "8cff5f70-dfb7-4022-90b5-8a6a5e199a79"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "a8ea3bd2-5467-427f-aedd-cf3d4b82896c",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "e368eb60-f3ea-4f58-a9fe-42b965b1f8e5"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "e6453158-6543-4bb4-97cd-c15d0a81b3bf",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "b754b280-ce88-4870-a273-a544d85747f8"
        }
      }
    ],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "random_image"
      },
      {
        "type": "any",
        "value": "",
        "key": "petID"
      },
      {
        "type": "any",
        "value": "",
        "key": "petId"
      },
      {
        "type": "any",
        "value": "",
        "key": "categoryId"
      },
      {
        "type": "any",
        "value": "",
        "key": "categoryName"
      },
      {
        "type": "any",
        "value": "",
        "key": "petName"
      },
      {
        "type": "any",
        "value": "",
        "key": "userId"
      },
      {
        "type": "any",
        "value": "",
        "key": "username"
      },
      {
        "type": "any",
        "value": "",
        "key": "firstName"
      },
      {
        "type": "any",
        "value": "",
        "key": "lastName"
      },
      {
        "type": "any",
        "value": "",
        "key": "email"
      },
      {
        "type": "any",
        "value": "",
        "key": "password"
      },
      {
        "type": "any",
        "value": "",
        "key": "phone"
      },
      {
        "type": "any",
        "value": "",
        "key": "orderId"
      },
      {
        "type": "any",
        "value": "",
        "key": "quantity"
      },
      {
        "type": "any",
        "value": "",
        "key": "shippingDate"
      },
      {
        "type": "any",
        "value": "",
        "key": "isoDate"
      }
    ],
    "info": {
      "_postman_id": "7bd162f6-d90d-4472-993c-67545a6b1c43",
      "name": "Pet Store API",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "f8301adc-7751-4ac7-86cb-0a2c6b9267e6",
    "values": []
  },
  "globals": {
    "id": "4597f55a-a067-4856-9b01-55a13fe22890",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 19,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 179.6,
      "responseMin": 105,
      "responseMax": 471,
      "responseSd": 145.70600536697177,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1665994020107,
      "completed": 1665994021437
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 5,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "594d19e4-621d-4dd6-bd55-2d8fb94ed59b",
          "httpRequestId": "15e80b1e-1c18-444d-b57c-60c6540daf27"
        },
        "item": {
          "id": "28c2cd20-0922-4502-be43-02de6bb8beeb",
          "name": "Create Pet",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{categoryId}},\r\n    \"name\": \"{{categoryName}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"{{random_image}}\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{$randomInt}},\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2be2f1f0-fdff-416e-85fd-f2931ab2803d",
                "type": "text/javascript",
                "exec": [
                  "const petId = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "const petName = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "const categoryId = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "const categoryName = pm.variables.replaceIn('{{$randomLoremWord}}');\r",
                  "const image = pm.variables.replaceIn('{{$randomAnimalsImage}}');\r",
                  "\r",
                  "pm.collectionVariables.set(\"petId\", petId);\r",
                  "pm.collectionVariables.set(\"petName\", petName);\r",
                  "pm.collectionVariables.set(\"categoryId\", categoryId);\r",
                  "pm.collectionVariables.set(\"categoryName\", categoryName);\r",
                  "pm.collectionVariables.set(\"random_image\", image);"
                ],
                "_lastExecutionId": "d137a806-bb46-413e-9855-0dd229a017d6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6938d038-a40f-4a6f-972c-5b03d3818cdd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "  pm.response.to.have.status(200);\r",
                  "});"
                ],
                "_lastExecutionId": "42db639c-3177-48a3-9870-2c37c3bb7cbf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ddb43911-f4e2-4dee-b626-e62f0eddfbe2",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "264",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 948,\r\n  \"category\": {\r\n    \"id\": 498,\r\n    \"name\": \"quidem\"\r\n  },\r\n  \"name\": \"Tom\",\r\n  \"photoUrls\": [\r\n    \"http://placeimg.com/640/480/animals\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 917,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "0608cb4d-7578-441d-b4a2-a90af28a4c9d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Oct 2022 08:07:01 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              52,
              56,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              57,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              113,
              117,
              105,
              100,
              101,
              109,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              116,
              111,
              85,
              114,
              108,
              115,
              34,
              58,
              91,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              112,
              108,
              97,
              99,
              101,
              105,
              109,
              103,
              46,
              99,
              111,
              109,
              47,
              54,
              52,
              48,
              47,
              52,
              56,
              48,
              47,
              97,
              110,
              105,
              109,
              97,
              108,
              115,
              34,
              93,
              44,
              34,
              116,
              97,
              103,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              49,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              93,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 471,
          "responseSize": 170
        },
        "id": "28c2cd20-0922-4502-be43-02de6bb8beeb",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "752b2baa-8633-45b0-97df-eee328e0e8c0",
          "length": 5,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "118b6afb-a8f5-48d6-a9f0-e00d0dc27796"
        },
        "item": {
          "id": "7f1728e3-8a30-4b5d-bf27-3bb7ad09f774",
          "name": "Retrieve pet by ID",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "pet",
                "{{petId}}"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "298bded3-a144-4cf9-be93-a18652f669cd",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "ad65d876-5993-4f5a-8946-9414325de5fc"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2248bff3-86c3-49ee-9433-68f62d552958",
                "type": "text/javascript",
                "exec": [
                  "var data = pm.response.json();\r",
                  "\r",
                  "pm.test(\"the id is correct\", function () {\r",
                  "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"petId\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the name is correct\", function () {\r",
                  "pm.expect(data.name.toString()).to.be.eql(pm.variables.get(\"petName\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the category id is correct\", function () {\r",
                  "pm.expect(data.category.id.toString()).to.be.eql(pm.variables.get(\"categoryId\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the category name is correct\", function () {\r",
                  "pm.expect(data.category.name.toString()).to.be.eql(pm.variables.get(\"categoryName\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the image is correct\", function () {\r",
                  "pm.expect(data.photoUrls).to.include(pm.variables.get(\"random_image\"));\r",
                  "});"
                ],
                "_lastExecutionId": "2e9c0bb5-51ca-434a-953b-b0d7efe66955"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "pet",
              "948"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "946b9cb7-c61e-4fc3-a182-c4dfb264b2d2",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bf25a9a3-9c9a-4fa3-bb67-d05d50ae2d92",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Oct 2022 08:07:01 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              52,
              56,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              57,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              113,
              117,
              105,
              100,
              101,
              109,
              34,
              125,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              84,
              111,
              109,
              34,
              44,
              34,
              112,
              104,
              111,
              116,
              111,
              85,
              114,
              108,
              115,
              34,
              58,
              91,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              112,
              108,
              97,
              99,
              101,
              105,
              109,
              103,
              46,
              99,
              111,
              109,
              47,
              54,
              52,
              48,
              47,
              52,
              56,
              48,
              47,
              97,
              110,
              105,
              109,
              97,
              108,
              115,
              34,
              93,
              44,
              34,
              116,
              97,
              103,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              49,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              93,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 109,
          "responseSize": 170
        },
        "id": "7f1728e3-8a30-4b5d-bf27-3bb7ad09f774",
        "assertions": [
          {
            "assertion": "the id is correct",
            "skipped": false
          },
          {
            "assertion": "the name is correct",
            "skipped": false
          },
          {
            "assertion": "the category id is correct",
            "skipped": false
          },
          {
            "assertion": "the category name is correct",
            "skipped": false
          },
          {
            "assertion": "the image is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a06e4c36-d9ae-4db2-a819-c68ec2419004",
          "length": 5,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d78663a1-9a80-475c-beaa-4136ea252468"
        },
        "item": {
          "id": "c5a7099b-60b8-4a79-ade1-960d56b4ea85",
          "name": "Create User",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "user"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": {{userId}},\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"phone\": \"{{phone}}\",\r\n  \"userStatus\": 0\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "07ff3a86-375f-4595-a18a-c29fa7e46264",
                "type": "text/javascript",
                "exec": [
                  "const userId = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "const username = pm.variables.replaceIn('{{$randomUserName}}');\r",
                  "const firstName = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                  "const lastName = pm.variables.replaceIn('{{$randomLastName}}');\r",
                  "const email = pm.variables.replaceIn('{{$randomEmail}}');\r",
                  "const password = pm.variables.replaceIn('{{$randomPassword}}');\r",
                  "const phone = pm.variables.replaceIn('{{$randomPhoneNumber}}');\r",
                  "\r",
                  "pm.collectionVariables.set(\"userId\", userId);\r",
                  "pm.collectionVariables.set(\"username\", username);\r",
                  "pm.collectionVariables.set(\"firstName\", firstName);\r",
                  "pm.collectionVariables.set(\"lastName\", lastName);\r",
                  "pm.collectionVariables.set(\"email\", email);\r",
                  "pm.collectionVariables.set(\"password\", password);\r",
                  "pm.collectionVariables.set(\"phone\", phone);\r",
                  ""
                ],
                "_lastExecutionId": "fc302b99-d9c8-49af-a4d3-47b394eaff8b"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1e553ddf-9796-4234-81e3-48283fd60dd9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "  pm.response.to.have.status(200);\r",
                  "});"
                ],
                "_lastExecutionId": "27910cb1-d29d-492b-8db4-67e5141ee0d3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "011f1d20-58be-41c4-912d-fea7a37b2121",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "222",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 697,\r\n  \"username\": \"Dimitri75\",\r\n  \"firstName\": \"Marcella\",\r\n  \"lastName\": \"Ernser\",\r\n  \"email\": \"Cristal_Reilly92@yahoo.com\",\r\n  \"password\": \"lgMT7z9xaibFpYa\",\r\n  \"phone\": \"463-738-1168\",\r\n  \"userStatus\": 0\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f447547b-4716-4446-9f6b-0ff05d48adc8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Oct 2022 08:07:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              50,
              48,
              48,
              44,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              117,
              110,
              107,
              110,
              111,
              119,
              110,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              54,
              57,
              55,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 107,
          "responseSize": 45
        },
        "id": "c5a7099b-60b8-4a79-ade1-960d56b4ea85",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a0e06c24-c3cd-40a3-ac57-32cc74ca3f2c",
          "length": 5,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "332a02c6-62aa-4ffd-8edc-764f1e6cf905"
        },
        "item": {
          "id": "2330afad-29ca-4fda-a4de-36b2afc0669e",
          "name": "Retrieve User by username",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "user",
                "{{username}}"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "74e116b4-c0a8-403a-8f43-73de14892060",
                "type": "text/javascript",
                "exec": [
                  "var data = pm.response.json();\r",
                  "\r",
                  "pm.test(\"the id is correct\", function () {\r",
                  "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"userId\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the name is correct\", function () {\r",
                  "pm.expect(data.username.toString()).to.be.eql(pm.variables.get(\"username\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the first name is correct\", function () {\r",
                  "pm.expect(data.firstName.toString()).to.be.eql(pm.variables.get(\"firstName\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the last name is correct\", function () {\r",
                  "pm.expect(data.lastName.toString()).to.be.eql(pm.variables.get(\"lastName\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the email name is correct\", function () {\r",
                  "pm.expect(data.email.toString()).to.be.eql(pm.variables.get(\"email\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the password is correct\", function () {\r",
                  "pm.expect(data.password.toString()).to.be.eql(pm.variables.get(\"password\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the phone is correct\", function () {\r",
                  "pm.expect(data.phone.toString()).to.be.eql(pm.variables.get(\"phone\"));\r",
                  "});"
                ],
                "_lastExecutionId": "02472d5a-e913-457c-822f-858bb78382fe"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "user",
              "Dimitri75"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "46774e02-aea2-44f2-990b-f01cbf5a7ee2",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7221f006-af95-4355-9606-402cb859a7bd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Oct 2022 08:07:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              57,
              55,
              44,
              34,
              117,
              115,
              101,
              114,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              68,
              105,
              109,
              105,
              116,
              114,
              105,
              55,
              53,
              34,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              114,
              99,
              101,
              108,
              108,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              114,
              110,
              115,
              101,
              114,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              67,
              114,
              105,
              115,
              116,
              97,
              108,
              95,
              82,
              101,
              105,
              108,
              108,
              121,
              57,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              112,
              97,
              115,
              115,
              119,
              111,
              114,
              100,
              34,
              58,
              34,
              108,
              103,
              77,
              84,
              55,
              122,
              57,
              120,
              97,
              105,
              98,
              70,
              112,
              89,
              97,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              52,
              54,
              51,
              45,
              55,
              51,
              56,
              45,
              49,
              49,
              54,
              56,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              83,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 105,
          "responseSize": 180
        },
        "id": "2330afad-29ca-4fda-a4de-36b2afc0669e",
        "assertions": [
          {
            "assertion": "the id is correct",
            "skipped": false
          },
          {
            "assertion": "the name is correct",
            "skipped": false
          },
          {
            "assertion": "the first name is correct",
            "skipped": false
          },
          {
            "assertion": "the last name is correct",
            "skipped": false
          },
          {
            "assertion": "the email name is correct",
            "skipped": false
          },
          {
            "assertion": "the password is correct",
            "skipped": false
          },
          {
            "assertion": "the phone is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "dbb70570-cf01-4003-88e1-4172613b9fc4",
          "length": 5,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9a7a8810-3b39-4e28-9737-421f8f572ed1"
        },
        "item": {
          "id": "4dad1dcd-21fc-4a21-82d5-541a6b1b2615",
          "name": "Create Order",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "v2",
                "store",
                "order"
              ],
              "host": [
                "petstore",
                "swagger",
                "io"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"id\": {{orderId}},\r\n  \"petId\": {{petId}},\r\n  \"quantity\": {{quantity}},\r\n  \"shipDate\": \"{{shippingDate}}\",\r\n  \"status\": \"pending\",\r\n  \"complete\": true\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "dcb26d07-1e56-4ca4-90d8-834ac6f2ddbe",
                "type": "text/javascript",
                "exec": [
                  "const orderId = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "const quantity = pm.variables.replaceIn('{{$randomInt}}');\r",
                  "const shippingDate = new Date(pm.variables.replaceIn('{{$randomDateFuture}}'));\r",
                  "\r",
                  "pm.collectionVariables.set(\"orderId\", orderId);\r",
                  "pm.collectionVariables.set(\"quantity\", quantity);\r",
                  "pm.collectionVariables.set(\"shippingDate\", shippingDate.toISOString());"
                ],
                "_lastExecutionId": "675b16f0-71e6-40ed-803c-9f750b838fba"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2ccda0e2-b1e9-43ab-b167-df217ea4a30a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "  pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "var data = pm.response.json();\r",
                  "\r",
                  "pm.test(\"the id is correct\", function () {\r",
                  "pm.expect(data.id.toString()).to.be.eql(pm.variables.get(\"orderId\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the petId is correct\", function () {\r",
                  "pm.expect(data.petId.toString()).to.be.eql(pm.variables.get(\"petId\"));\r",
                  "});\r",
                  "\r",
                  "pm.test(\"the quantity is correct\", function () {\r",
                  "pm.expect(data.quantity.toString()).to.be.eql(pm.variables.get(\"quantity\"));\r",
                  "});"
                ],
                "_lastExecutionId": "8cff5f70-dfb7-4022-90b5-8a6a5e199a79"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "769d5d5f-d6bd-4884-b287-a06430f12e22",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "140",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n  \"id\": 6,\r\n  \"petId\": 948,\r\n  \"quantity\": 428,\r\n  \"shipDate\": \"2023-04-29T16:50:15.000Z\",\r\n  \"status\": \"pending\",\r\n  \"complete\": true\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b52d5bcd-8def-449e-838e-8ad5bc86db41",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 17 Oct 2022 08:07:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": "GET, POST, DELETE, PUT"
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": "Content-Type, api_key, Authorization"
            },
            {
              "key": "Server",
              "value": "Jetty(9.2.9.v20150224)"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              112,
              101,
              116,
              73,
              100,
              34,
              58,
              57,
              52,
              56,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              52,
              50,
              56,
              44,
              34,
              115,
              104,
              105,
              112,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              51,
              45,
              48,
              52,
              45,
              50,
              57,
              84,
              49,
              54,
              58,
              53,
              48,
              58,
              49,
              53,
              46,
              48,
              48,
              48,
              43,
              48,
              48,
              48,
              48,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              112,
              101,
              110,
              100,
              105,
              110,
              103,
              34,
              44,
              34,
              99,
              111,
              109,
              112,
              108,
              101,
              116,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 106,
          "responseSize": 112
        },
        "id": "4dad1dcd-21fc-4a21-82d5-541a6b1b2615",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "the id is correct",
            "skipped": false
          },
          {
            "assertion": "the petId is correct",
            "skipped": false
          },
          {
            "assertion": "the quantity is correct",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 677
    },
    "failures": [],
    "error": null
  }
}